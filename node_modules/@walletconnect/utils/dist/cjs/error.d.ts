import { ErrorResponse } from "@walletconnect/jsonrpc-utils";
export declare const ERROR_TYPE: {
    GENERIC: "GENERIC";
    MISSING_OR_INVALID: "MISSING_OR_INVALID";
    MISSING_RESPONSE: "MISSING_RESPONSE";
    MISSING_DECRYPT_PARAMS: "MISSING_DECRYPT_PARAMS";
    INVALID_UPDATE_REQUEST: "INVALID_UPDATE_REQUEST";
    INVALID_UPGRADE_REQUEST: "INVALID_UPGRADE_REQUEST";
    RECORD_ALREADY_EXISTS: "RECORD_ALREADY_EXISTS";
    RESTORE_WILL_OVERRIDE: "RESTORE_WILL_OVERRIDE";
    NO_MATCHING_ID: "NO_MATCHING_ID";
    NO_MATCHING_TOPIC: "NO_MATCHING_TOPIC";
    NO_MATCHING_RESPONSE: "NO_MATCHING_RESPONSE";
    NO_MATCHING_KEY: "NO_MATCHING_KEY";
    UNKNOWN_JSONRPC_METHOD: "UNKNOWN_JSONRPC_METHOD";
    MISMATCHED_TOPIC: "MISMATCHED_TOPIC";
    MISMATCHED_ACCOUNTS: "MISMATCHED_ACCOUNTS";
    SETTLED: "SETTLED";
    NOT_APPROVED: "NOT_APPROVED";
    PROPOSAL_RESPONDED: "PROPOSAL_RESPONDED";
    RESPONSE_ACKNOWLEDGED: "RESPONSE_ACKNOWLEDGED";
    EXPIRED: "EXPIRED";
    SETTLE_TIMEOUT: "SETTLE_TIMEOUT";
    JSONRPC_REQUEST_TIMEOUT: "JSONRPC_REQUEST_TIMEOUT";
    UNAUTHORIZED_TARGET_CHAIN: "UNAUTHORIZED_TARGET_CHAIN";
    UNAUTHORIZED_JSON_RPC_METHOD: "UNAUTHORIZED_JSON_RPC_METHOD";
    UNAUTHORIZED_NOTIFICATION_TYPE: "UNAUTHORIZED_NOTIFICATION_TYPE";
    UNAUTHORIZED_UPDATE_REQUEST: "UNAUTHORIZED_UPDATE_REQUEST";
    UNAUTHORIZED_UPGRADE_REQUEST: "UNAUTHORIZED_UPGRADE_REQUEST";
    UNAUTHORIZED_MATCHING_CONTROLLER: "UNAUTHORIZED_MATCHING_CONTROLLER";
    JSONRPC_REQUEST_METHOD_REJECTED: "JSONRPC_REQUEST_METHOD_REJECTED";
    JSONRPC_REQUEST_METHOD_UNAUTHORIZED: "JSONRPC_REQUEST_METHOD_UNAUTHORIZED";
    JSONRPC_REQUEST_METHOD_UNSUPPORTED: "JSONRPC_REQUEST_METHOD_UNSUPPORTED";
    DISCONNECTED_ALL_CHAINS: "DISCONNECTED_ALL_CHAINS";
    DISCONNECTED_TARGET_CHAIN: "DISCONNECTED_TARGET_CHAIN";
    DISAPPROVED_CHAINS: "DISAPPROVED_CHAINS";
    DISAPPROVED_JSONRPC: "DISAPPROVED_JSONRPC";
    DISAPPROVED_NOTIFICATION: "DISAPPROVED_NOTIFICATION";
    UNSUPPORTED_CHAINS: "UNSUPPORTED_CHAINS";
    UNSUPPORTED_JSONRPC: "UNSUPPORTED_JSONRPC";
    UNSUPPORTED_NOTIFICATION: "UNSUPPORTED_NOTIFICATION";
    UNSUPPORTED_SIGNAL: "UNSUPPORTED_SIGNAL";
    USER_DISCONNECTED: "USER_DISCONNECTED";
    UNKNOWN: "UNKNOWN";
};
export declare type ErrorType = keyof typeof ERROR_TYPE;
export declare type ErroStringifier = (params?: any) => string;
export declare type ErrorFormatter = (params?: any) => ErrorResponse;
export declare type Error = {
    type: ErrorType;
    code: number;
    stringify: ErroStringifier;
    format: ErrorFormatter;
};
export declare const ERROR: Record<ErrorType, Error>;
//# sourceMappingURL=error.d.ts.map