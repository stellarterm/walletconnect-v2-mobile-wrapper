import { hasParamsLength, methodEndsWith } from "./misc";
export function isSubscribeRequest(request) {
    return isSubscribeMethod(request.method) && isSubscribeParams(request.params);
}
export function isSubscribeMethod(method) {
    return methodEndsWith(method, "subscribe");
}
export function isSubscribeParams(params) {
    return hasParamsLength(params, 1) && "topic" in params;
}
export function isPublishRequest(request) {
    return isPublishMethod(request.method) && isPublishParams(request.params);
}
export function isPublishMethod(method) {
    return methodEndsWith(method, "publish");
}
export function isPublishParams(params) {
    return (hasParamsLength(params, 3) &&
        "message" in params &&
        "topic" in params &&
        "ttl" in params);
}
export function isUnsubscribeRequest(request) {
    return (isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params));
}
export function isUnsubscribeMethod(method) {
    return methodEndsWith(method, "unsubscribe");
}
export function isUnsubscribeParams(params) {
    return hasParamsLength(params, 2) && "id" in params && "topic" in params;
}
export function isSubscriptionRequest(request) {
    return (isSubscriptionMethod(request.method) && isSubscriptionParams(request.params));
}
export function isSubscriptionMethod(method) {
    return methodEndsWith(method, "subscription");
}
export function isSubscriptionParams(params) {
    return hasParamsLength(params, 2) && "id" in params && "data" in params;
}
//# sourceMappingURL=validators.js.map